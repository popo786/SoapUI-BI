<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="cee3648e-993f-4df0-9766-779fbc0df51a" created="2.4.0" activeEnvironment="QA" name="Business Intelligence" resourceRoot="" compositeProjectFormat="1.3" defaultScriptLanguage="Groovy" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="cee3648e-993f-4df0-9766-779fbc0df51afileName">Business-Intelligence-readyapi-project</con:setting>
  </con:settings>
  <con:vcsConfiguration>
    <con:vcsName>Git</con:vcsName>
    <con:repositoryIdentifier>https://github.com/popo786/SoapUI-BI.git</con:repositoryIdentifier>
  </con:vcsConfiguration>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:properties>
    <con:property>
      <con:name>FredInvalidAccessKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>LLGStoreFredAccessKeyV1.1</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="62697e70-7a5e-4c9c-92d3-4932f076a232" name="QA">
    <con:service type="REST" name="BI.API V1.0">
      <con:endpoint authProfile="No Authorization">https://nxt-tpi-qa-bi-api.azurewebsites.net</con:endpoint>
    </con:service>
    <con:property>
      <con:name>FredInvalidAccessKey</con:name>
      <con:value>pginQvVrHaf6yfyvbm6FjQh0iawPJRv52o/7IYr+TB+Ngv+W7dyTnPH9XUNcs2nz4LlZp0/7NsiU1TzQKyUgQO</con:value>
    </con:property>
    <con:property>
      <con:name>LLGStoreFredAccessKeyV1.1</con:name>
      <con:value>pginQvVrHaf6yfyvbm6FjQh0iawPJRv52o/7IYr+TB+Ngv+W7dyTnPH9XUNcs2nz4LlZp0/7MsiU1TzQKyUgQO</con:value>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
